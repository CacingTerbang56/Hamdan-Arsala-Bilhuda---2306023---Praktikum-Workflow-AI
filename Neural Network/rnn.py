# -*- coding: utf-8 -*-
"""RNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aTDyC1HYpDHdvkLV9MnUVRp7U-qJcpYb
"""

pip install torch matplotlib



"""PREDIKSI DERET ANGKA"""

import torch
import torch.nn as nn
import matplotlib.pyplot as plt

# Buat data: deret angka 1–51, targetnya adalah angka selanjutnya
def create_sequence(seq, window_size):
    X, Y = [], []
    for i in range(len(seq) - window_size):
        X.append(seq[i:i+window_size])
        Y.append(seq[i+window_size])
    return torch.tensor(X).float(), torch.tensor(Y).float()

# Deret panjang untuk pelatihan
full_seq = [i for i in range(1, 52)]  # 1 sampai 51
window_size = 3
X, Y = create_sequence(full_seq, window_size)  # X: [[1,2,3], [2,3,4], ...]

# Bentuk ulang input jadi: [batch_size, seq_len, input_size]
X = X.view(len(X), window_size, 1)
Y = Y.view(len(Y), 1)

# Definisikan model
class LSTMPredictor(nn.Module):
    def __init__(self):
        super().__init__()
        self.lstm = nn.LSTM(input_size=1, hidden_size=64, batch_first=True)
        self.fc = nn.Linear(64, 1)

    def forward(self, x):
        lstm_out, _ = self.lstm(x)
        last_output = lstm_out[:, -1, :]  # ambil output terakhir
        out = self.fc(last_output)
        return out

# Inisialisasi model, loss, optimizer
model = LSTMPredictor()
criterion = nn.MSELoss()
optimizer = torch.optim.Adam(model.parameters(), lr=0.005)

# Training loop
losses = []
for epoch in range(2000):
    output = model(X)
    loss = criterion(output, Y)

    optimizer.zero_grad()
    loss.backward()
    optimizer.step()

    losses.append(loss.item())
    if epoch % 200 == 0:
        print(f"Epoch {epoch}, Loss: {loss.item():.6f}")

# Plot loss
plt.plot(losses)
plt.title("Training Loss")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.grid(True)
plt.show()

# Uji prediksi angka setelah [48, 49, 50] → target: 51
test_input = torch.tensor([[48.0, 49.0, 50.0]]).view(1, window_size, 1)
with torch.no_grad():
    prediction = model(test_input)
    print(f"Prediksi angka setelah 50: {prediction.item():.4f}")